
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<div class="well">
    <div class="form-horizontal">
        <h4>Utilice el formulario para agregar nuevas ubicaciones</h4>
        <hr />

        <form class="form-horizontal">
            <div class="form-group">
                <label for="inputEmail3" class="col-sm-2 control-label">Ubicación Padre</label>
                <div class="col-sm-10">
                    <select id="idParent" class="form-control"></select>

                </div>
            </div>
            <div class="form-group">
                <label for="inputEmail3" class="col-sm-2 control-label">Nombre Ubicación </label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" id="txtUbicacion" placeholder="Nombre Ubicación" autocomplete="off">
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <button type="button" id="btnGuardar" class="btn btn-success">Guardar</button>
                </div>
            </div>
        </form>


    </div>
</div>
<h1>Administre las ubicaciones </h1>
<div id="listaUbicaciones"></div>

<div class="modal fade " id="mdlEliminar" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <p style="text-align:right">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">x</button>
                </p>
                <h4 class="modal-title" id="myModalLabel">Ubicaciones</h4>
            </div>
            <div class="modal-body">
                <p>¿Seguro que desea eliminar esta ubicación?</p>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-danger" id="btnEliminar" data-dismiss="modal">Sí, seguro</button>



                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade " id="mdlModificar" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <p style="text-align:right">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">x</button>
                </p>
                <h4 class="modal-title" id="myModalLabel">Seleccione el Centro</h4>
            </div>
            <div class="modal-body">
               
                <div id="centros"></div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>    
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">

        $(document).ready(function () {
            var idSeleccionado = "";

            cargarCentros();

            $(document).on("click", ".seleccionar", function () {
                var creId = $(this).attr('creId');
                var creNombre = $(this).attr('creNombre');
               $.ajax({
                   url: '@Url.Action("asociarCentroResponsabilidad", "ubicaciones")',
                   datatype: 'json',
                   type: 'POST',
                   async: true,
                   data: { id: idSeleccionado, creId: creId, creNombre: creNombre }, // o sin stringify para datos primitivos  {rut : item.rut },
                   success: function (data) {
                       if (data.Resultado == "Guardado") {
                           $.notificar({ text: 'Asociado', title: 'Exito', type: 'success' });                         
                           cargarUbicaciones();
                       }
                       else {
                           $.notificar({ text: 'Error', title: 'imposible', type: 'danger' });
                       }

                       // $("#listaUbicaciones").jsonTabla({ tabla: r });

                   }
               });
                

            });

            $(document).on("click", ".modificar", function () {
                idSeleccionado = $(this).attr('idubicacion');
                console.log(idSeleccionado);
                $("#mdlModificar").modal('show');

            });

            $(document).on("click", ".eliminar", function () {
                idSeleccionado = $(this).attr('idubicacion');
                console.log(idSeleccionado);
                $("#mdlEliminar").modal('show');

            });


            $("#btnEliminar").click(function () {

                $.ajax({
                    url: '@Url.Action("Eliminar", "ubicaciones")',
                    datatype: 'json',
                    type: 'POST',
                    async: true,
                    data: { id: idSeleccionado }, // o sin stringify para datos primitivos  {rut : item.rut },
                    success: function (data) {
                        if (data.Resultado == "Guardado") {
                            $.notificar({ text: 'Guardado', title: 'Exito', type: 'success' });
                            var r = eval(data);
                            cargarPadres();
                            cargarUbicaciones();
                        }
                        else {
                            $.notificar({ text: 'Ubicacion en uso o con Sub-ubicaciones', title: 'imposible', type: 'danger' });
                        }

                        // $("#listaUbicaciones").jsonTabla({ tabla: r });

                    }
                });


            });

            $("#btnGuardar").click(function () {

                if ($("#txtUbicacion").val() == "") {
                    $.notificar({ text: 'Escriba el nombre de la ubicación', title: 'ups', type: 'danger' });
                    return;
                }

                var ubicacion = {};
                ubicacion.idParent = $("#idParent").val();
                console.log($("#idParent").val());
                ubicacion.nombre = $("#txtUbicacion").val();
                ubicacion.rutaCompleta = (($("#idParent option:selected").text() == "\\") ? "" : $("#idParent option:selected").text()) + "\\" + " " + $("#txtUbicacion").val();

                $.ajax({
                    url: '@Url.Action("Guardar", "ubicaciones")',
                    datatype: 'json',
                    type: 'POST',
                    async: true,
                    data: { ubicacion: ubicacion }, // o sin stringify para datos primitivos  {rut : item.rut },
                    success: function (data) {
                        $.notificar({ text: 'Guardado', title: 'Exito', type: 'success' });
                        var r = eval(data);
                        cargarPadres();

                        cargarUbicaciones();
                    }
                });



            });


            cargarPadres();
            cargarUbicaciones();

        });

        function cargarPadres() {

            $.ajax({
                url: '@Url.Action("VerUbicaciones", "Ubicaciones")',
                datatype: 'json',
                type: 'POST',
                contentType: 'application/json',
                async: true,
                //data: JSON.stringify({ rut: objeto}), // o sin stringify para datos primitivos  {rut : item.rut },
                success: function (data) {
                    data = eval(data);

                    var texto = "";
                    $.each(data, function (i, item) {
                        texto += "<option value='" + item.Id + "'>" + item.RutaCompleta + "</option>"
                    });

                    $("#idParent").html(texto);

                }
            });
        }

        function cargarUbicaciones() {
            $.ajax({
                url: '@Url.Action("Ubicaciones", "Ubicaciones")',
                datatype: 'json',
                type: 'POST',
                async: true,
                // data: { id: $("#id").val() }, // o sin stringify para datos primitivos  {rut : item.rut },
                success: function (data) {

                    var r = eval(data);

                    $("#listaUbicaciones").jsonTabla({ tabla: r });

                }
            });
        }


        function cargarCentros()
        {
            $.ajax({
                url: '@Url.Action("cargarCentros", "ubicaciones")',
                datatype: 'json',
                type: 'POST',
                async: true,
               // data: { id: idSeleccionado }, // o sin stringify para datos primitivos  {rut : item.rut },
                success: function (data) {
                   
                    data = eval(data);
                    $("#centros").jsonTabla({ tabla: data });

                }
            });
        }

    </script>
}